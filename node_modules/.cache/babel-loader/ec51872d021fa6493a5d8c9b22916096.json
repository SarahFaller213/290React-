{"ast":null,"code":"import _regeneratorRuntime from \"/Users/yeonwoo/CS290-proto/final/StartIQ/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/yeonwoo/CS290-proto/final/StartIQ/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/yeonwoo/CS290-proto/final/StartIQ/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yeonwoo/CS290-proto/final/StartIQ/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/storage';\nvar config = {\n  apiKey: \"AIzaSyDoqABBcwvXDdxMhdY_4nmLiPpBX_8YwVw\",\n  authDomain: \"startiq.firebaseapp.com\",\n  databaseURL: \"https://startiq.firebaseio.com\",\n  projectId: \"startiq\",\n  storageBucket: \"startiq.appspot.com\",\n  messagingSenderId: \"617875093373\"\n};\nvar fallbackIMG = \"https://firebasestorage.googleapis.com/v0/b/startiq.appspot.com/o/imgs%2FfakeImgForProfile.png?alt=media&token=8224719a-3243-4edd-a4d7-daa37abbd669\";\n\nvar Firebase =\n/*#__PURE__*/\nfunction () {\n  function Firebase() {\n    var _this = this;\n\n    _classCallCheck(this, Firebase);\n\n    this.doCreateUserWithEmailAndPassword = function (email, password) {\n      return _this.auth.createUserWithEmailAndPassword(email, password);\n    };\n\n    this.doSignInWithEmailAndPassword = function (email, password) {\n      return _this.auth.signInWithEmailAndPassword(email, password);\n    };\n\n    this.doSignOut = function () {\n      return _this.auth.signOut();\n    };\n\n    this.doPasswordReset = function (email) {\n      return _this.auth.sendPasswordResetEmail(email);\n    };\n\n    this.doPasswordUpdate = function (password) {\n      return _this.auth.currentUser.updatePassword(password);\n    };\n\n    this.doSignInWithGoogle = function () {\n      return _this.auth.signInWithPopup(_this.googleProvider).then(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(res) {\n          var _res$user, displayName, email, uid, prevUser;\n\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _res$user = res.user, displayName = _res$user.displayName, email = _res$user.email, uid = _res$user.uid;\n                  _context.next = 3;\n                  return _this.user(uid).once('value');\n\n                case 3:\n                  prevUser = _context.sent.val();\n\n                  if (prevUser) {\n                    _context.next = 7;\n                    break;\n                  }\n\n                  _context.next = 7;\n                  return _this.signup(\"user\", displayName, email, undefined, \"\", uid);\n\n                case 7:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    };\n\n    this.user = function (uid) {\n      return _this.db.ref(\"users/\".concat(uid));\n    };\n\n    this.users = function () {\n      return _this.db.ref('users');\n    };\n\n    this.workspace = function (uid) {\n      return _this.db.ref(\"workspace/\".concat(uid));\n    };\n\n    this.fileStorage = function (uid) {\n      return _this.storage.ref(\"files/\".concat(uid));\n    };\n\n    this.imgStorage = function (uid) {\n      return _this.storage.ref(\"imgs/\".concat(uid));\n    };\n\n    this.profile = function (uid) {\n      return _this.db.ref(\"users/\".concat(uid, \"/profile_info\"));\n    };\n\n    this.tokens = function (token) {\n      return _this.db.ref(\"tokens/\".concat(token));\n    };\n\n    this.tokenPair = function () {\n      return _this.db.ref('tokens');\n    };\n\n    this.revise = function (uid, key) {\n      return _this.db.ref(\"workspace/\".concat(uid, \"/\").concat(key, \"/revision\"));\n    };\n\n    this.prompts = function (prompt) {\n      return _this.db.ref(\"prompts/\".concat(prompt));\n    };\n\n    this.comments = function (uid, key) {\n      return _this.db.ref(\"workspace/\".concat(uid, \"/\").concat(key, \"/comments\"));\n    };\n\n    app.initializeApp(config);\n    this.auth = app.auth();\n    this.db = app.database();\n    this.uid = undefined;\n    this.storage = app.storage();\n    this.googleProvider = new app.auth.GoogleAuthProvider();\n  }\n\n  _createClass(Firebase, [{\n    key: \"getCurrentUID\",\n    value: function getCurrentUID() {\n      return this.uid;\n    }\n  }, {\n    key: \"setAuthChangeHandler\",\n    value: function setAuthChangeHandler(handler) {\n      this.auth.onAuthStateChanged(handler);\n    } // ************************* SIGNUP API ***************************\n\n  }, {\n    key: \"signup\",\n    value: function () {\n      var _signup = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(userType, username, email, imgURL, community, uid) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.user(uid).set({\n                  userType: userType,\n                  username: username,\n                  email: email,\n                  community: community\n                });\n\n              case 2:\n                _context2.next = 4;\n                return this.putProfile({\n                  university: \"\",\n                  degree: \"\",\n                  roles: \"\",\n                  skills: \"\",\n                  industries: \"\",\n                  profileIMG: imgURL || fallbackIMG\n                }, uid);\n\n              case 4:\n                _context2.next = 6;\n                return this.workspace(uid).set({\n                  username: username\n                });\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function signup(_x2, _x3, _x4, _x5, _x6, _x7) {\n        return _signup.apply(this, arguments);\n      }\n\n      return signup;\n    }() // ************************* PROFILE API ***************************\n\n  }, {\n    key: \"putProfile\",\n    value: function putProfile(profile, uid) {\n      return this.profile(uid).set(profile);\n    }\n  }, {\n    key: \"getProfile\",\n    value: function getProfile(uid) {\n      return this.profile(uid).once('value').then(function (snapshot) {\n        var profile = snapshot.val();\n        if (!profile.profileIMG) profile.profileIMG = fallbackIMG;\n        return profile;\n      });\n    }\n  }, {\n    key: \"uploadImg\",\n    value: function uploadImg(img) {\n      return this.imgStorage(img.name + Date.now()).put(img).then(function (snapshot) {\n        return snapshot.ref.getDownloadURL();\n      });\n    } // ************************* IDEA API ***************************\n\n  }, {\n    key: \"putIdea\",\n    value: function () {\n      var _putIdea = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(ideaText, uid, attachments) {\n        var date;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                date = Date.now();\n                this.workspace(uid).push({\n                  idea: ideaText,\n                  created_at: date,\n                  attachments: attachments,\n                  questions: {\n                    comp: {\n                      \"Are there competing Companies\": \"\"\n                    },\n                    customer: {\n                      \"Who is your target customer\": \"\"\n                    },\n                    prob: {\n                      \"What problem is your idea going to solve?\": \"\"\n                    },\n                    sol: {\n                      \"What is the solution does your idea have?\": \"\"\n                    }\n                  }\n                }).child(\"revision\").push({\n                  idea: ideaText,\n                  created_at: date\n                });\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function putIdea(_x8, _x9, _x10) {\n        return _putIdea.apply(this, arguments);\n      }\n\n      return putIdea;\n    }()\n  }, {\n    key: \"getIdea\",\n    value: function getIdea(uid) {\n      return this.workspace(uid).once('value').then(function (data) {\n        var workspaceData = data.val();\n        delete workspaceData.username;\n        return Object.entries(workspaceData);\n      });\n    }\n  }, {\n    key: \"getCreator\",\n    value: function getCreator(uid) {\n      return this.workspace(uid).once('value').then(function (data) {\n        var workspaceData = data.val();\n        return workspaceData.username;\n      });\n    }\n  }, {\n    key: \"deleteIdea\",\n    value: function deleteIdea(uid, key) {\n      return this.workspace(uid).child(key).remove();\n    }\n  }, {\n    key: \"getRefineIdea\",\n    value: function getRefineIdea(uid, key) {\n      return this.workspace(uid).child(key).once('value').then(function (data) {\n        return data.val();\n      });\n    }\n  }, {\n    key: \"editIdea\",\n    value: function () {\n      var _editIdea = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(ideaText, uid, key) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.workspace(uid).child(key).update({\n                  idea: ideaText\n                });\n\n              case 2:\n                _context4.next = 4;\n                return this.revise(uid, key).push({\n                  idea: ideaText,\n                  created_at: Date.now()\n                });\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function editIdea(_x11, _x12, _x13) {\n        return _editIdea.apply(this, arguments);\n      }\n\n      return editIdea;\n    }()\n  }, {\n    key: \"uploadFile\",\n    value: function uploadFile(uid, file) {\n      return this.fileStorage(uid).child(file.name + Date.now()).put(file);\n    }\n  }, {\n    key: \"uploadFiles\",\n    value: function uploadFiles(uid, files) {\n      var _this2 = this;\n\n      // the array returned from file input isn't really a array so...\n      var fileArray = [];\n\n      for (var i = 0; i < files.length; i++) {\n        fileArray.push(files[i]);\n      }\n\n      return Promise.all(fileArray.map(function (file) {\n        return _this2.uploadFile(uid, file).then(function (snapshot) {\n          return snapshot.ref.getDownloadURL();\n        }).then(function (url) {\n          return [file.name, url];\n        });\n      }));\n    }\n  }, {\n    key: \"putComment\",\n    value: function putComment(uid, key, user, text) {\n      return this.comments(uid, key).push({\n        0: user,\n        1: text\n      });\n    } // ************************* Token API ***************************\n\n  }, {\n    key: \"checkToken\",\n    value: function () {\n      var _checkToken = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(token) {\n        var tokenized;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                tokenized = \"\";\n                _context5.next = 3;\n                return this.tokens(token).once('value', function (snapshot) {\n                  if (snapshot.exists()) {\n                    tokenized = snapshot.val();\n                  } else {\n                    tokenized = false;\n                  }\n                });\n\n              case 3:\n                return _context5.abrupt(\"return\", tokenized);\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function checkToken(_x14) {\n        return _checkToken.apply(this, arguments);\n      }\n\n      return checkToken;\n    }()\n  }, {\n    key: \"putTokens\",\n    value: function putTokens(token, community) {\n      return this.tokens(token).set(community);\n    }\n  }]);\n\n  return Firebase;\n}();\n\nexport default Firebase;","map":{"version":3,"sources":["/Users/yeonwoo/CS290-proto/final/StartIQ/src/components/Firebase/Firebase.js"],"names":["app","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","fallbackIMG","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","doSignInWithGoogle","signInWithPopup","googleProvider","then","res","user","displayName","uid","once","prevUser","val","signup","undefined","db","ref","users","workspace","fileStorage","storage","imgStorage","profile","tokens","token","tokenPair","revise","key","prompts","prompt","comments","initializeApp","database","GoogleAuthProvider","handler","onAuthStateChanged","userType","username","imgURL","community","set","putProfile","university","degree","roles","skills","industries","profileIMG","snapshot","img","name","Date","now","put","getDownloadURL","ideaText","attachments","date","push","idea","created_at","questions","comp","customer","prob","sol","child","data","workspaceData","Object","entries","remove","update","file","files","fileArray","i","length","Promise","all","map","uploadFile","url","text","tokenized","exists"],"mappings":"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","sourcesContent":["import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/storage';\n\nconst config = {\n  apiKey: \"AIzaSyDoqABBcwvXDdxMhdY_4nmLiPpBX_8YwVw\",\n  authDomain: \"startiq.firebaseapp.com\",\n  databaseURL: \"https://startiq.firebaseio.com\",\n  projectId: \"startiq\",\n  storageBucket: \"startiq.appspot.com\",\n  messagingSenderId: \"617875093373\"\n};\n\nconst fallbackIMG = \"https://firebasestorage.googleapis.com/v0/b/startiq.appspot.com/o/imgs%2FfakeImgForProfile.png?alt=media&token=8224719a-3243-4edd-a4d7-daa37abbd669\";\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n    this.auth = app.auth();\n    this.db = app.database();\n    this.uid = undefined;\n    this.storage = app.storage();\n    this.googleProvider = new app.auth.GoogleAuthProvider();\n\n  }\n\n  getCurrentUID() {\n    return this.uid;\n  }\n\n  doCreateUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  doSignInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n   \n  doSignOut = () => this.auth.signOut()\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n  doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\n\n    // *** User API *** GOOGLE \n \n  doSignInWithGoogle = () => \n    this.auth.signInWithPopup(this.googleProvider).then(async (res) => {\n      const {displayName, email, uid} = res.user;\n      const prevUser = (await this.user(uid).once('value')).val();\n      if(!prevUser) await this.signup(\"user\", displayName, email, undefined, \"\", uid);\n    });\n\n\n  // *** User API ***\n\n\n  user = uid => this.db.ref(`users/${uid}`);\n  users = () => this.db.ref('users');\n  workspace = uid => this.db.ref(`workspace/${uid}`);\n  fileStorage = uid => this.storage.ref(`files/${uid}`); //Storage for pdf file uploads\n  imgStorage = uid => this.storage.ref(`imgs/${uid}`);  //Storage for profile picture uploads\n  profile = uid => this.db.ref(`users/${uid}/profile_info`);\n  tokens = token => this.db.ref(`tokens/${token}`);\n  tokenPair = () => this.db.ref('tokens');\n  revise = (uid, key) => this.db.ref(`workspace/${uid}/${key}/revision`);\n  prompts = (prompt) => this.db.ref(`prompts/${prompt}`);\n  comments = (uid, key) => this.db.ref(`workspace/${uid}/${key}/comments`);\n\n  setAuthChangeHandler(handler) {\n    this.auth.onAuthStateChanged(handler);\n  }\n\n  // ************************* SIGNUP API ***************************\n\n  async signup(userType, username, email, imgURL, community, uid) {\n    await this.user(uid).set({userType, username, email, community});\n    await this.putProfile({ \n      university: \"\", \n      degree: \"\", \n      roles: \"\", \n      skills: \"\", \n      industries: \"\", \n      profileIMG: imgURL || fallbackIMG\n    }, uid);\n    await this.workspace(uid).set({ username });\n  }\n\n  // ************************* PROFILE API ***************************\n  putProfile(profile, uid) {\n    return this.profile(uid).set(profile);\n  }\n  \n  getProfile(uid) {\n    return this.profile(uid).once('value').then(snapshot => {\n      const profile = snapshot.val();\n      if(!profile.profileIMG) profile.profileIMG = fallbackIMG;\n      return profile;\n    });\n  }\n\n  uploadImg(img) {\n    return this.imgStorage(img.name+Date.now()).put(img)\n            .then((snapshot) => snapshot.ref.getDownloadURL());\n  }\n\n\n  // ************************* IDEA API ***************************\n  async putIdea(ideaText, uid, attachments) {\n    let date = Date.now()\n    this.workspace(uid).push({\n      idea: ideaText,\n      created_at: date,\n      attachments: attachments,\n      questions: {\n          comp :{\n            \"Are there competing Companies\": \"\",\n          },\n          customer :{\n          \"Who is your target customer\": \"\", \n          },\n          prob :{\n          \"What problem is your idea going to solve?\": \"\",\n          },\n          sol:{\n              \"What is the solution does your idea have?\": \"\",\n          },\n        }\n    }).child(\"revision\").push({\n      idea: ideaText,\n      created_at: date\n    });\n  }\n\n \n\n  getIdea(uid) {\n    return this.workspace(uid).once('value').then( data => {\n        const workspaceData = data.val();\n        delete workspaceData.username;\n        return Object.entries(workspaceData);\n    });\n  }\n\n  getCreator(uid) {\n    return this.workspace(uid).once('value').then(data => {\n      const workspaceData = data.val();\n      return workspaceData.username;\n    })\n  }\n\n  deleteIdea(uid, key) {\n    return this.workspace(uid).child(key).remove();\n  }\n\n  getRefineIdea(uid, key) {\n    return this.workspace(uid).child(key).once('value').then( data => {\n      return data.val()\n    });\n  }\n\n  async editIdea(ideaText, uid, key){\n    await this.workspace(uid).child(key).update({idea: ideaText});\n    await this.revise(uid, key).push({\n      idea: ideaText,\n      created_at: Date.now()\n    });\n  }\n\n  uploadFile(uid, file) {\n    return this.fileStorage(uid).child(file.name+Date.now()).put(file);\n  }\n\n  uploadFiles(uid, files) {\n    // the array returned from file input isn't really a array so...\n    let fileArray = [];\n    for(let i = 0 ; i < files.length ; i ++) {\n      fileArray.push(files[i]);\n    }\n    \n    return Promise.all(\n      fileArray.map(file => \n        this.uploadFile(uid, file)\n            .then((snapshot) => snapshot.ref.getDownloadURL())\n            .then((url) => [file.name, url])\n      )\n    );\n  }\n\n  putComment(uid, key, user, text) {\n    return this.comments(uid, key).push({\n      0: user,\n      1: text\n    })\n  }\n\n// ************************* Token API ***************************\nasync checkToken(token){\n  var tokenized = \"\"\n  await this.tokens(token).once('value', function(snapshot){\n    if (snapshot.exists()){\n      tokenized = snapshot.val();\n    }\n    else{\n      tokenized = false;\n    }\n  })\n  return tokenized;\n}\n\nputTokens(token, community) {\n  return this.tokens(token).set(community);\n}\n\n\n}\n\n\nexport default Firebase;"]},"metadata":{},"sourceType":"module"}